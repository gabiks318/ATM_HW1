
  cmpq $A, (root)
  jne bad_exit

  movq $A, %rbx
  cmpq $5, (%rbx)
  jne bad_exit
  cmpq $B, 8(%rbx)
  jne bad_exit
  cmpq $C, 16(%rbx)
  jne bad_exit

  movq $B, %rbx
  cmpq $-2, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $C, %rbx
  cmpq $9, (%rbx)
  jne bad_exit
  cmpq $D, 8(%rbx)
  jne bad_exit
  cmpq $E, 16(%rbx)
  jne bad_exit

  movq $D, %rbx
  cmpq $7, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit
  
  movq $E, %rbx
  cmpq $11, (%rbx)
  jne bad_exit
  cmpq $new_node, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $new_node, %rbx
  cmpq $10, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
root:
        .quad   A
A:
        .quad   5
        .quad   B
        .quad   C
B:
        .quad   -2
        .quad   0
        .quad   0
C:
        .quad   9
        .quad   D
        .quad   E
D:
        .quad   7
        .quad   0
        .quad   0

E:
        .quad   11
        .quad   0
        .quad   0

new_node:
        .quad   10
        .quad   0
        .quad   0
